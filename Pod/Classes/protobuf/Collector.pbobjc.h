// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: collector.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30001
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class GPBTimestamp;
@class LSPBAuth;
@class LSPBCommand;
@class LSPBInternalMetrics;
@class LSPBKeyValue;
@class LSPBLog;
@class LSPBMetricsSample;
@class LSPBReference;
@class LSPBSpan;
@class LSPBSpanContext;
@class LSPBTracer;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum LSPBReference_Relationship

typedef GPB_ENUM(LSPBReference_Relationship) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  LSPBReference_Relationship_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  LSPBReference_Relationship_ChildOf = 0,
  LSPBReference_Relationship_FollowsFrom = 1,
};

GPBEnumDescriptor *LSPBReference_Relationship_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL LSPBReference_Relationship_IsValidValue(int32_t value);

#pragma mark - LSPBCollectorRoot

/// Exposes the extension registry for this file.
///
/// The base class provides:
/// @code
///   + (GPBExtensionRegistry *)extensionRegistry;
/// @endcode
/// which is a @c GPBExtensionRegistry that includes all the extensions defined by
/// this file and all files that it depends on.
@interface LSPBCollectorRoot : GPBRootObject
@end

#pragma mark - LSPBSpanContext

typedef GPB_ENUM(LSPBSpanContext_FieldNumber) {
  LSPBSpanContext_FieldNumber_TraceId = 1,
  LSPBSpanContext_FieldNumber_SpanId = 2,
  LSPBSpanContext_FieldNumber_Baggage = 3,
};

@interface LSPBSpanContext : GPBMessage

@property(nonatomic, readwrite) uint64_t traceId;

@property(nonatomic, readwrite) uint64_t spanId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *baggage;
/// The number of items in @c baggage without causing the array to be created.
@property(nonatomic, readonly) NSUInteger baggage_Count;

@end

#pragma mark - LSPBKeyValue

typedef GPB_ENUM(LSPBKeyValue_FieldNumber) {
  LSPBKeyValue_FieldNumber_Key = 1,
  LSPBKeyValue_FieldNumber_StringValue = 2,
  LSPBKeyValue_FieldNumber_IntValue = 3,
  LSPBKeyValue_FieldNumber_DoubleValue = 4,
  LSPBKeyValue_FieldNumber_BoolValue = 5,
};

typedef GPB_ENUM(LSPBKeyValue_Value_OneOfCase) {
  LSPBKeyValue_Value_OneOfCase_GPBUnsetOneOfCase = 0,
  LSPBKeyValue_Value_OneOfCase_StringValue = 2,
  LSPBKeyValue_Value_OneOfCase_IntValue = 3,
  LSPBKeyValue_Value_OneOfCase_DoubleValue = 4,
  LSPBKeyValue_Value_OneOfCase_BoolValue = 5,
};

@interface LSPBKeyValue : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

@property(nonatomic, readonly) LSPBKeyValue_Value_OneOfCase valueOneOfCase;

@property(nonatomic, readwrite, copy, null_resettable) NSString *stringValue;

@property(nonatomic, readwrite) int64_t intValue;

@property(nonatomic, readwrite) double doubleValue;

@property(nonatomic, readwrite) BOOL boolValue;

@end

/// Clears whatever value was set for the oneof 'value'.
void LSPBKeyValue_ClearValueOneOfCase(LSPBKeyValue *message);

#pragma mark - LSPBLog

typedef GPB_ENUM(LSPBLog_FieldNumber) {
  LSPBLog_FieldNumber_Timestamp = 1,
  LSPBLog_FieldNumber_KeyvaluesArray = 2,
};

@interface LSPBLog : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *timestamp;
/// Test to see if @c timestamp has been set.
@property(nonatomic, readwrite) BOOL hasTimestamp;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LSPBKeyValue*> *keyvaluesArray;
/// The number of items in @c keyvaluesArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger keyvaluesArray_Count;

@end

#pragma mark - LSPBReference

typedef GPB_ENUM(LSPBReference_FieldNumber) {
  LSPBReference_FieldNumber_Relationship = 1,
  LSPBReference_FieldNumber_SpanContext = 2,
};

@interface LSPBReference : GPBMessage

@property(nonatomic, readwrite) LSPBReference_Relationship relationship;

@property(nonatomic, readwrite, strong, null_resettable) LSPBSpanContext *spanContext;
/// Test to see if @c spanContext has been set.
@property(nonatomic, readwrite) BOOL hasSpanContext;

@end

/// Fetches the raw value of a @c LSPBReference's @c relationship property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t LSPBReference_Relationship_RawValue(LSPBReference *message);
/// Sets the raw value of an @c LSPBReference's @c relationship property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetLSPBReference_Relationship_RawValue(LSPBReference *message, int32_t value);

#pragma mark - LSPBSpan

typedef GPB_ENUM(LSPBSpan_FieldNumber) {
  LSPBSpan_FieldNumber_SpanContext = 1,
  LSPBSpan_FieldNumber_OperationName = 2,
  LSPBSpan_FieldNumber_ReferencesArray = 3,
  LSPBSpan_FieldNumber_StartTimestamp = 4,
  LSPBSpan_FieldNumber_DurationMicros = 5,
  LSPBSpan_FieldNumber_TagsArray = 6,
  LSPBSpan_FieldNumber_LogsArray = 7,
};

@interface LSPBSpan : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) LSPBSpanContext *spanContext;
/// Test to see if @c spanContext has been set.
@property(nonatomic, readwrite) BOOL hasSpanContext;

@property(nonatomic, readwrite, copy, null_resettable) NSString *operationName;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LSPBReference*> *referencesArray;
/// The number of items in @c referencesArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger referencesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *startTimestamp;
/// Test to see if @c startTimestamp has been set.
@property(nonatomic, readwrite) BOOL hasStartTimestamp;

@property(nonatomic, readwrite) uint64_t durationMicros;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LSPBKeyValue*> *tagsArray;
/// The number of items in @c tagsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger tagsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LSPBLog*> *logsArray;
/// The number of items in @c logsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger logsArray_Count;

@end

#pragma mark - LSPBTracer

typedef GPB_ENUM(LSPBTracer_FieldNumber) {
  LSPBTracer_FieldNumber_TracerId = 1,
  LSPBTracer_FieldNumber_TagsArray = 4,
};

@interface LSPBTracer : GPBMessage

@property(nonatomic, readwrite) uint64_t tracerId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LSPBKeyValue*> *tagsArray;
/// The number of items in @c tagsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger tagsArray_Count;

@end

#pragma mark - LSPBMetricsSample

typedef GPB_ENUM(LSPBMetricsSample_FieldNumber) {
  LSPBMetricsSample_FieldNumber_Name = 1,
  LSPBMetricsSample_FieldNumber_IntValue = 2,
  LSPBMetricsSample_FieldNumber_DoubleValue = 3,
};

typedef GPB_ENUM(LSPBMetricsSample_Value_OneOfCase) {
  LSPBMetricsSample_Value_OneOfCase_GPBUnsetOneOfCase = 0,
  LSPBMetricsSample_Value_OneOfCase_IntValue = 2,
  LSPBMetricsSample_Value_OneOfCase_DoubleValue = 3,
};

@interface LSPBMetricsSample : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readonly) LSPBMetricsSample_Value_OneOfCase valueOneOfCase;

@property(nonatomic, readwrite) int64_t intValue;

@property(nonatomic, readwrite) double doubleValue;

@end

/// Clears whatever value was set for the oneof 'value'.
void LSPBMetricsSample_ClearValueOneOfCase(LSPBMetricsSample *message);

#pragma mark - LSPBInternalMetrics

typedef GPB_ENUM(LSPBInternalMetrics_FieldNumber) {
  LSPBInternalMetrics_FieldNumber_StartTimestamp = 1,
  LSPBInternalMetrics_FieldNumber_DurationMicros = 2,
  LSPBInternalMetrics_FieldNumber_LogsArray = 3,
  LSPBInternalMetrics_FieldNumber_CountsArray = 4,
  LSPBInternalMetrics_FieldNumber_GaugesArray = 5,
};

@interface LSPBInternalMetrics : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *startTimestamp;
/// Test to see if @c startTimestamp has been set.
@property(nonatomic, readwrite) BOOL hasStartTimestamp;

@property(nonatomic, readwrite) uint64_t durationMicros;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LSPBLog*> *logsArray;
/// The number of items in @c logsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger logsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LSPBMetricsSample*> *countsArray;
/// The number of items in @c countsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger countsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LSPBMetricsSample*> *gaugesArray;
/// The number of items in @c gaugesArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger gaugesArray_Count;

@end

#pragma mark - LSPBAuth

typedef GPB_ENUM(LSPBAuth_FieldNumber) {
  LSPBAuth_FieldNumber_AccessToken = 1,
};

@interface LSPBAuth : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *accessToken;

@end

#pragma mark - LSPBReportRequest

typedef GPB_ENUM(LSPBReportRequest_FieldNumber) {
  LSPBReportRequest_FieldNumber_Tracer = 1,
  LSPBReportRequest_FieldNumber_Auth = 2,
  LSPBReportRequest_FieldNumber_SpansArray = 3,
  LSPBReportRequest_FieldNumber_TimestampOffsetMicros = 5,
  LSPBReportRequest_FieldNumber_InternalMetrics = 6,
};

@interface LSPBReportRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) LSPBTracer *tracer;
/// Test to see if @c tracer has been set.
@property(nonatomic, readwrite) BOOL hasTracer;

@property(nonatomic, readwrite, strong, null_resettable) LSPBAuth *auth;
/// Test to see if @c auth has been set.
@property(nonatomic, readwrite) BOOL hasAuth;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LSPBSpan*> *spansArray;
/// The number of items in @c spansArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger spansArray_Count;

@property(nonatomic, readwrite) uint32_t timestampOffsetMicros;

@property(nonatomic, readwrite, strong, null_resettable) LSPBInternalMetrics *internalMetrics;
/// Test to see if @c internalMetrics has been set.
@property(nonatomic, readwrite) BOOL hasInternalMetrics;

@end

#pragma mark - LSPBCommand

typedef GPB_ENUM(LSPBCommand_FieldNumber) {
  LSPBCommand_FieldNumber_Disable = 1,
};

@interface LSPBCommand : GPBMessage

@property(nonatomic, readwrite) BOOL disable;

@end

#pragma mark - LSPBReportResponse

typedef GPB_ENUM(LSPBReportResponse_FieldNumber) {
  LSPBReportResponse_FieldNumber_CommandsArray = 1,
  LSPBReportResponse_FieldNumber_ReceiveTimestamp = 2,
  LSPBReportResponse_FieldNumber_TransmitTimestamp = 3,
  LSPBReportResponse_FieldNumber_ErrorsArray = 4,
};

@interface LSPBReportResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LSPBCommand*> *commandsArray;
/// The number of items in @c commandsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger commandsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *receiveTimestamp;
/// Test to see if @c receiveTimestamp has been set.
@property(nonatomic, readwrite) BOOL hasReceiveTimestamp;

@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *transmitTimestamp;
/// Test to see if @c transmitTimestamp has been set.
@property(nonatomic, readwrite) BOOL hasTransmitTimestamp;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *errorsArray;
/// The number of items in @c errorsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger errorsArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
